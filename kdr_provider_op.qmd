---
title: "Key Driver Summary (Physician)"
format: html
editor: visual
params:
  type : "Physician"
  service_line : "ON"
  npi : "1598290868"
---

```{r}
#| echo: false
#| warning: false 
#load packages----
library(tidyverse)
library(janitor)
library(dplyr)
library(here)
library(Hmisc)
library(magrittr)
library(kableExtra)
library(janitor)
library(gt)
library(tinytex)


# #clean raw data
# data<-read.csv(file="G:/Press Ganey II/Reports/Ad Hoc/DEEP DIVE/Key Driver Reports/data/OP_Provider022024-102024.csv")
# 
# data<-data%>%
#   clean_names()%>%
#   rename(name=provider_nm, program=program_nm,practice = practice_summary,
#          date=recdate_day,question=question_text_latest, top_box=top_box_score)
# 
# data$npi<-as.character(data$npi)
# 
# 
# save(data,file="G:/Press Ganey II/Reports/Ad Hoc/DEEP DIVE/Key Driver Reports/data/provider_data.Rdata")
# 
# questions<-read.csv(file="G:/Press Ganey II/Reports/Ad Hoc/DEEP DIVE/Key Driver Reports/data/OP_questions.csv")
# 
# questions<-questions%>%
#   clean_names()
# 
# save(questions,file="G:/Press Ganey II/Reports/Ad Hoc/DEEP DIVE/Key Driver Reports/data/op_question.Rdata")


load("G:/Press Ganey II/Reports/Ad Hoc/DEEP DIVE/Key Driver Reports/data/provider_data.Rdata")
load("G:/Press Ganey II/Reports/Ad Hoc/DEEP DIVE/Key Driver Reports/data/op_question.Rdata")


##set data parameters: service line, clinic, outcome variable(s)----
outvar<-"O7"  #LTR Provider
outvar_all<-c("MED7","O2","O3","O7") #Outpatient Oncology

data$newdate<- mdy(data$date)

data<-data%>%
  filter(provider_type == params$type)%>%
  filter(!varname %in% c( "CT2", "CT5", "I69", "Q8845_02", "T19", "T2", ""))

name_filter<-data %>%
  filter(npi == params$npi) %>%
  distinct(name)
 
  #remove certain variables

#Correlations
r<-data%>%
  filter(npi == params$npi) %>%
  select(survey_id,varname,value)%>% #use only mean column's data
  spread(varname,value)%>% #convert from long to wide format
  cor(use='pairwise.complete.obs')

tmp1<-r[-1,outvar,drop=FALSE] #drop the survey id, select outvar column & convert to data frame
tmp1<-as.data.frame(tmp1)
tmp1$varname <- rownames(tmp1)
colnames(tmp1)[1] = "corr"


#Top Box Ratios
#Step 1. convert clinic level data to wide data set nrows = survey count
tbwide<-data%>%
  filter(npi == params$npi) %>%
  select(survey_id,varname,top_box) %>% #use only topbox data
  spread(varname,top_box) %>% #convert from long to wide format
  select(-c(survey_id))

# test<-addmargins(xtabs(~O7+O7,tbwide))
# test

#Step 2. create functions to create table(x) and calculate tbratio(y)
tbratio<-function(data,var){
  x<-addmargins(xtabs(~data[,var]+data[,outvar],data))
  y<-((x[2,2]+0.5)/(x[2,3]+1))/((x[1,2]+0.5)/(x[1,3]+1)) 
  return(y)
}

#calculate tbratio across all variables & store as data frame
tmp2<-data.frame()
for (i in 1:dim(tbwide)[2]){ 
  m<-tbratio(tbwide,i)
  tmp2[i,1] <- colnames(tbwide)[i]
  tmp2[i,2] <- m
}

colnames(tmp2)<-c('varname','ratio')

#Percentile Rank
indiv_rank<-data %>%
  select(survey_id,npi,provider_type,varname,top_box) %>% #subset original data set
  group_by(npi,varname) %>%
  summarise(tbscore=sum(top_box)/n()*100,n=n()) %>% #calculate topbox
  #filter(n>29) %>%  #remove small samples
  group_by(varname) %>%
  mutate(percent_rank=100*(rank(tbscore)/length(tbscore))) %>%
  filter(npi == params$npi)

#merge rankdata, tbratio (tmp2), and correlations(tmp1) to form a table
df1<-merge(indiv_rank,tmp1)
df2<-merge(df1,tmp2)
df3<-subset(df2, !(varname %in% outvar_all))#removes the response variables from priority index calculations

#Sorted KDR

kd0<-df3%>%
  mutate(rescaled_corr = (corr-min(corr))/(max(corr)-min(corr)),
         rescaled_tbratio = (ratio-min(ratio))/(max(ratio)-min(ratio)),
         driver_index = 100*((rescaled_corr + rescaled_tbratio)/2),
         priority_index = driver_index-(0.5*((percent_rank)))
  )


kd1<-left_join(df2,kd0)

kd2<-merge(kd1,questions,by="varname") 

kdr<-kd2 %>%
  top_n(10,priority_index) %>%
  arrange(desc(priority_index)) %>%
  select(question_text_latest,corr,ratio,driver_index,tbscore,percent_rank) %>%
  mutate(across(c(corr,ratio),round, 2) )%>%
  mutate(tbscore=round(tbscore,1)) %>%
  mutate(across(c(driver_index,percent_rank),round)) %>%
  mutate(tbscore_rank=paste(tbscore," (",percent_rank,")")) %>%
  select(-c(tbscore,percent_rank)) %>%
  rename('Question' = question_text_latest) %>%
  rename('Linear Correlation' = corr) %>%
  rename('Top-Box Ratio' = ratio) %>%
  rename('Driver Index' = driver_index) %>%
  rename('Top-Box Score (Percentile Rank)' = tbscore_rank)
  
kdr<-rowid_to_column(kdr)

kdr<-kdr %>%
  rename('Priority'=rowid)

ltr<-kd2 %>%
  filter(varname==outvar) %>%
  select(question_text_latest,tbscore,percent_rank,n) %>%
  mutate(percent_rank=round(percent_rank,0)) %>%
  mutate(tbscore=round(tbscore,1)) %>%
  mutate(tbscore_rank=paste(tbscore," (",percent_rank,")")) %>%
  rename('Question' = question_text_latest) %>%
  rename('Top-Box Score' = tbscore) %>%
  rename('Percentile Rank'= percent_rank) %>%
  rename('Top-Box Score (Percentile Rank)' = tbscore_rank)
```

<!-- #### `r name_filter` (NPI: `r params$npi`) -->

```{r}
#| echo: false
#| warning: false

ltr2<-ltr %>%
  mutate("Priority"="") %>%
  mutate("Linear Correlation"="") %>%
  mutate("Top-Box Ratio"="") %>%
  mutate("Driver Index"="") %>%
  select("Priority","Question","Linear Correlation","Top-Box Ratio","Driver Index","Top-Box Score (Percentile Rank)")


total<-rbind(ltr2,kdr)

total%>%
  gt()%>%
  cols_align(align="center",columns = everything())%>%
  tab_options(column_labels.background.color = 'dodgerblue4')%>%
  cols_align(align = "left",columns = Question)%>%
  tab_style(style=cell_text(align="center"), 
            locations = cells_column_labels(columns = everything())
            )

```

The table lists the top ten survey questions, sorted in order of priority, that drive the respondents' top box score for the Institutional Measure: ***`r ltr[,1]`*** .

**Notes:**

-   This summarizes the results of ***`r ltr[,4]`*** surveys received between ***`r min(data$newdate)`*** and ***`r max(data$newdate)`***.

-   The [percentile rank]{.underline} is an internal rank that compares all physicians within the service line. For example, a percentile rank of 90 means the score is in the top 10 percent of all physicians.

-   The [correlation]{.underline} measures the strength of the linear association between the response to the institutional measure and the question of interest. The `r ltr[,4]` surveys analyzed **`r (if(ltr[,4] == 30) {"meets"} else if (ltr[,4] < 30) {"is less than"} else {"exceeds"})`** the minimum number of surveys (30) required to come to a **statistically sound** conclusion regarding the correlation.

-   The [top box ratio]{.underline} calculates the likelihood of giving the top box score for the institutional measure, given the score is a top box for the question of interest.

-   The [driver index]{.underline} sorts the combined correlation and top box ratio scores.

-   The [priority order]{.underline} is determined by combining the driver index and the percentile rank.
